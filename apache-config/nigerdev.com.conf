# Configuration Apache pour nigerdev.com
# Multi-tenant E-commerce Platform

# Redirection HTTP vers HTTPS
<VirtualHost *:80>
    ServerName nigerdev.com
    
    # Rediriger tout le trafic HTTP vers HTTPS
    RewriteEngine On
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
    
    # Logs pour le debug
    ErrorLog ${APACHE_LOG_DIR}/nigerdev-http-error.log
    CustomLog ${APACHE_LOG_DIR}/nigerdev-http-access.log combined
</VirtualHost>

# Configuration HTTPS principale
<VirtualHost *:443>
    ServerName nigerdev.com
    DocumentRoot /var/www/nigerdev

    # Configuration SSL
    SSLEngine on
    SSLCertificateFile    /etc/letsencrypt/live/nigerdev.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/nigerdev.com/privkey.pem
    Include               /etc/letsencrypt/options-ssl-apache.conf
    SSLCertificateChainFile /etc/letsencrypt/live/nigerdev.com/chain.pem

    # Headers de sécurité
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff  
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"

    # Configuration Proxy
    ProxyPreserveHost On
    ProxyRequests Off
    ProxyAddHeaders On
    
    # Timeout configurations
    ProxyTimeout 300
    ProxyPass /api/upload timeout=600
    ProxyPassReverse /api/upload timeout=600

    # ============================================
    # ROUTES API (Backend Node.js sur port 8001)
    # ============================================
    
    # API Routes - toutes les routes commençant par /api/
    ProxyPass /api/ http://127.0.0.1:8001/api/
    ProxyPassReverse /api/ http://127.0.0.1:8001/api/
    
    # Routes d'upload d'images
    ProxyPass /uploads/ http://127.0.0.1:8001/uploads/
    ProxyPassReverse /uploads/ http://127.0.0.1:8001/uploads/
    
    # Route de test backend
    ProxyPass /test-backend http://127.0.0.1:8001/api/test-backend
    ProxyPassReverse /test-backend http://127.0.0.1:8001/api/test-backend

    # ============================================
    # FRONTEND (Next.js sur port 3000)
    # ============================================
    
    # WebSocket pour Next.js Hot Reload (développement)
    ProxyPass /_next/webpack-hmr ws://127.0.0.1:3000/_next/webpack-hmr
    ProxyPassReverse /_next/webpack-hmr ws://127.0.0.1:3000/_next/webpack-hmr
    
    # Assets statiques Next.js
    ProxyPass /_next/ http://127.0.0.1:3000/_next/
    ProxyPassReverse /_next/ http://127.0.0.1:3000/_next/
    
    # Toutes les autres routes (Frontend Next.js)
    ProxyPass / http://127.0.0.1:3000/
    ProxyPassReverse / http://127.0.0.1:3000/
    
    # ============================================
    # CONFIGURATION MULTI-TENANT
    # ============================================
    
    # Headers pour identifier le tenant
    ProxyPassReverse / http://127.0.0.1:3000/
    ProxyPassReverseMatch ^/(.*) http://127.0.0.1:3000/$1
    
    # Headers personnalisés
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Host "%{HTTP_HOST}s"
    RequestHeader set X-Real-IP "%{REMOTE_ADDR}s"

    # ============================================
    # GESTION DES ERREURS ET LOGS
    # ============================================
    
    # Pages d'erreur personnalisées
    ErrorDocument 502 /maintenance.html
    ErrorDocument 503 /maintenance.html
    ErrorDocument 504 /maintenance.html
    
    # Configuration des logs
    LogLevel info
    ErrorLog ${APACHE_LOG_DIR}/nigerdev-error.log
    CustomLog ${APACHE_LOG_DIR}/nigerdev-access.log combined
    
    # Log des requêtes proxy pour debugging
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" proxy
    CustomLog ${APACHE_LOG_DIR}/nigerdev-proxy.log proxy

    # ============================================
    # OPTIMISATIONS PERFORMANCE
    # ============================================
    
    # Compression Gzip
    <Location />
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png|ico)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
    </Location>
    
    # Cache des assets statiques
    <LocationMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 month"
        Header append Cache-Control "public, immutable"
    </LocationMatch>

    # ============================================
    # MAINTENANCE ET MONITORING
    # ============================================
    
    # Page de maintenance (si nécessaire)
    # RewriteEngine On
    # RewriteCond %{REQUEST_URI} !^/maintenance.html$
    # RewriteRule ^(.*)$ /maintenance.html [R=503,L]
    
</VirtualHost>

# Configuration pour sous-domaines (si nécessaire pour multi-tenant)
<VirtualHost *:443>
    ServerName *.nigerdev.com
    
    # Configuration SSL avec wildcard (si vous avez un certificat wildcard)
    SSLEngine on
    SSLCertificateFile    /etc/letsencrypt/live/nigerdev.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/nigerdev.com/privkey.pem
    Include               /etc/letsencrypt/options-ssl-apache.conf
    
    # Headers pour identifier le sous-domaine
    ProxyPreserveHost On
    RequestHeader set X-Tenant-Domain "%{HTTP_HOST}s"
    
    # Proxy vers l'application
    ProxyPass /api/ http://127.0.0.1:8001/api/
    ProxyPassReverse /api/ http://127.0.0.1:8001/api/
    ProxyPass /uploads/ http://127.0.0.1:8001/uploads/
    ProxyPassReverse /uploads/ http://127.0.0.1:8001/uploads/
    ProxyPass / http://127.0.0.1:3000/
    ProxyPassReverse / http://127.0.0.1:3000/
    
    # Logs séparés pour les sous-domaines
    ErrorLog ${APACHE_LOG_DIR}/nigerdev-subdomains-error.log
    CustomLog ${APACHE_LOG_DIR}/nigerdev-subdomains-access.log combined
</VirtualHost> 